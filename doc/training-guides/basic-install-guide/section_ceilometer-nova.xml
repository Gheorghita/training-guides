<?xml version="1.0" encoding="UTF-8"?>
<section xmlns="http://docbook.org/ns/docbook"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  xmlns:xlink="http://www.w3.org/1999/xlink"
  version="5.0"
  xml:id="ceilometer-agent-nova">
  <?dbhtml stop-chunking?>
  <title>Install the Compute agent for Telemetry</title>
  <para>Telemetry is composed of an API service, a collector and a range
    of disparate agents. This section explains how to install and configure
    the agent that runs on the compute node.</para>
  <procedure>
  <title>To configure prerequisites</title>
    <step>
      <para>Install the package:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>apt-get install ceilometer-agent-compute</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>yum install openstack-ceilometer-compute python-ceilometerclient python-pecan</userinput></screen>
      <screen os="opensuse;sles"><prompt>#</prompt> <userinput>zypper install openstack-ceilometer-agent-compute</userinput></screen>
    </step>
    <step>
      <para>Edit the <filename>/etc/nova/nova.conf</filename> file and
        add the following lines to the <literal>[DEFAULT]</literal>
        section:</para>
      <programlisting language="ini">[DEFAULT]
...
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier</programlisting>
    </step>
    <step>
      <para>Restart the Compute service:</para>
      <screen os="ubuntu;debian"><prompt>#</prompt> <userinput>service nova-compute restart</userinput></screen>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>systemctl restart openstack-nova-compute.service</userinput></screen>
      <para os="sles">On SLES:</para>
      <screen os="sles"><prompt>#</prompt> <userinput>service openstack-nova-compute restart</userinput></screen>
      <para os="opensuse">On openSUSE:</para>
      <screen os="opensuse"><prompt>#</prompt> <userinput>systemctl restart openstack-nova-compute.service</userinput></screen>
    </step>
  </procedure>
  <procedure>
    <title>To configure the Compute agent for Telemetry</title>
    <para>Edit the <filename>/etc/ceilometer/ceilometer.conf</filename>
      file and complete the following actions:</para>
    <step>
      <para>In the <literal>[publisher]</literal> section, set the
        secret key for Telemetry service nodes:</para>
      <programlisting language="ini">[publisher]
# Secret value for signing metering messages (string value)
metering_secret = <replaceable>CEILOMETER_TOKEN</replaceable></programlisting>
      <para>Replace <replaceable>CEILOMETER_TOKEN</replaceable> with
        the ceilometer token that you created previously.</para>
    </step>
    <step os="centos;fedora;opensuse;rhel;sles;ubuntu">
      <para>In the <literal>[DEFAULT]</literal> section, configure
        RabbitMQ broker access:</para>
      <programlisting language="ini">[DEFAULT]
rabbit_host = <replaceable>controller</replaceable>
rabbit_password = <replaceable>RABBIT_PASS</replaceable></programlisting>
      <para>Replace <replaceable>RABBIT_PASS</replaceable> with the password
        you chose for the guest account in RabbitMQ.</para>
    </step>
      <step>
        <para>In the <literal>[keystone_authtoken]</literal> section,
          configure Identity service access:</para>
      <programlisting language="ini">[keystone_authtoken]
auth_uri = http://<replaceable>controller</replaceable>:5000/v2.0
identity_uri = http://<replaceable>controller</replaceable>:35357
admin_tenant_name = service
admin_user = ceilometer
admin_password = <replaceable>CEILOMETER_PASS</replaceable></programlisting>
      <para>Replace <replaceable>CEILOMETER_PASS</replaceable> with the
        password you chose for the Telemetry module database.</para>
      <note>
        <para>Comment out the <literal>auth_host</literal>,
          <literal>auth_port</literal>, and <literal>auth_protocol</literal>
          keys, since they are replaced by the <literal>identity_uri</literal>
          and <literal>auth_uri</literal> keys.</para>
      </note>
     </step>
     <step>
      <para>In the <literal>[service_credentials]</literal> section,
        configure service credentials:</para>
      <programlisting language="ini">[service_credentials]
os_auth_url = http://<replaceable>controller</replaceable>:5000/v2.0
os_username = ceilometer
os_tenant_name = service
os_password = <replaceable>CEILOMETER_PASS</replaceable>
os_endpoint_type = internalURL</programlisting>
    <para>Replace CEILOMETER_PASS with the password you chose for the
      ceilometer user in the Identity service.</para>
    </step>
    <step os="ubuntu">
      <para>In the <literal>[DEFAULT]</literal> section, configure the
        log directory:</para>
       <programlisting language="ini">[DEFAULT]
log_dir = /var/log/ceilometer</programlisting>
    </step>
  </procedure>
  <procedure>
    <title>To finish installation</title>
    <step os="ubuntu;debian">
      <para>Restart the service with its new settings:</para>
      <screen><prompt>#</prompt> <userinput>service ceilometer-agent-compute restart</userinput></screen>
    </step>
    <step os="rhel;centos;fedora;sles;opensuse">
      <para>Start the service and configure it to start when the
        system boots:</para>
      <screen os="rhel;centos;fedora"><prompt>#</prompt> <userinput>systemctl enable openstack-ceilometer-compute.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-ceilometer-compute.service</userinput></screen>
      <para os="sles">On SLES:</para>
      <screen os="sles"><prompt>#</prompt> <userinput>service openstack-ceilometer-agent-compute start</userinput>
<prompt>#</prompt> <userinput>chkconfig openstack-ceilometer-agent-compute on</userinput></screen>
      <para os="opensuse">On openSUSE:</para>
      <screen os="opensuse"><prompt>#</prompt> <userinput>systemctl enable openstack-ceilometer-compute.service</userinput>
<prompt>#</prompt> <userinput>systemctl start openstack-ceilometer-compute.service</userinput></screen>
    </step>
  </procedure>
</section>
