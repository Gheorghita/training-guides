[tox]
minversion = 1.6
envlist = checkbuild
skipsdist = True

[testenv]
basepython = python2
setenv = VIRTUAL_ENV={envdir}
install_command = pip install -U {opts} {packages}
deps = -r{toxinidir}/test-requirements.txt
whitelist_externals =
  echo
  mkdir
  rm
  rsync

[testenv:venv]
commands = {posargs}

[doc8]
# Settings for doc8:
# File extensions to use
extension = .rst,.txt
ignore-path = doc/upstream-training/build/*,doc/training-guides/build/*

[testenv:checkbuild]
commands =
  # Niceness test
  doc8 doc/upstream-training
  doc8 doc/training-guides
  # Build upstream-training slides
  sphinx-build -W -b slides -d doc/upstream-training/build/slides.doctrees doc/upstream-training/source/ doc/upstream-training/build/slides
  # Build upstream landing page
  sphinx-build -W -b html -d doc/upstream-training/build/slides.doctrees doc/upstream-training doc/upstream-training/build/slides
  # Build training-guides slides
  sphinx-build -W -b slides -d doc/training-guides/build/slides.doctrees/associate-guide  doc/training-guides/associate-guide/ doc/training-guides/build/slides/associate-guide
  # Build training-guides landing page
  sphinx-build -b html -d doc/training-guides/build/slides.doctrees doc/training-guides doc/training-guides/build/slides doc/training-guides/index.rst
  # Publish for check site
  mkdir -p publish-docs/upstream-training
  mkdir -p publish-docs/training-guides
  rsync -av doc/upstream-training/build/slides/ publish-docs/upstream-training/
  rsync -av doc/training-guides/build/slides/ publish-docs/training-guides/

[testenv:publishdocs]
passenv = ZUUL*
commands =
  # Build upstream-training slides
  sphinx-build -W -b slides -d doc/upstream-training/build/slides.doctrees/ doc/upstream-training/source/ doc/upstream-training/build/slides
  # Build upstream landing page
  sphinx-build -W -b html -d doc/upstream-training/build/slides.doctrees/ doc/upstream-training doc/upstream-training/build/slides
  # Build training-guides slides
  sphinx-build -W -b slides -d doc/training-guides/build/slides.doctrees/associate-guide doc/training-guides/associate-guide/ doc/training-guides/build/slides/associate-guide
  # Build training-guides landing page
  sphinx-build -W -b html -d doc/training-guides/build/slides.doctrees doc/training-guides doc/training-guides/build/slides doc/training-guides/index.rst
  # Publish as draft
  mkdir -p publish-docs/draft/training-guides
  rsync -av doc/training-guides/build/slides/ publish-docs/draft/training-guides/
  {toxinidir}/tools/add-marker.sh publish-docs/draft/training-guides/
  # Publish
  mkdir -p publish-docs/upstream-training
  rsync -av doc/upstream-training/build/slides/ publish-docs/upstream-training/
  {toxinidir}/tools/add-marker.sh publish-docs/upstream-training
  # Publish translated guides
  {toxinidir}/tools/buildlang.sh

[testenv:upstream-slides]
commands =
  # Niceness test
  doc8 doc/upstream-training
  # Build upstream-training slides
  sphinx-build -W -b slides doc/upstream-training/source/ doc/upstream-training/build/slides
  # Build upstream landing page index.html
  sphinx-build -W -b html doc/upstream-training doc/upstream-training/build/slides

[testenv:training-slides]
commands =
  # Niceness test
  doc8 doc/training-guides
  # Build training-guides slides
  sphinx-build -W -b slides doc/training-guides/associate-guide/ doc/training-guides/build/slides/associate-guide
  # Build training-guides landing page index.html
  sphinx-build -W -b html  doc/training-guides doc/training-guides/build/slides doc/training-guides/index.rst

[testenv:generatepot-training]
# Generate POT files for translation
commands = {toxinidir}/tools/generatepot-training.sh
